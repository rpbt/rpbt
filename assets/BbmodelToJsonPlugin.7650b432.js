import{L as E}from"./index.6cd7337a.js";const v=new E("bbmodel-to-json");async function b(u,o){if(!(o.meta&&o.meta.format_version=="4.0"))throw new Error("Unsupported .bbmodel format. Only version 4.0 is currently supported.If you have a newer version, try look for a newer version of the bbmodel-to-json plugin.");u.addLogger(v);const s={credit:"Made with Blockbench",elements:[],textures:{}};o.front_gui_light&&(s.gui_light="front"),o.ambientocclusion||(s.ambientocclusion=!1),o.display&&(s.display=o.display),o.parent&&(s.parent=parent);for(let i=0;i<o.textures.length;i++){const a=o.textures[i];let t="";a.namespace&&(t=a.namespace+":"),a.folder&&(t+=a.folder+"/"),a.name&&(t+=a.name),t.endsWith(".png")&&(t=t.substring(0,t.length-4)),s.textures[a.id]=t,a.particle&&(s.textures.particle=t);const n=u.getTexturePath(t);if(!n.startsWith("assets/minecraft")){const c=a.source,h=await new Promise(function(d,f){const e=new Image;e.onload=function(){d(e)},e.onerror=f,e.src=c}),r=document.createElement("canvas");r.width=h.width,r.height=h.height;const p=r.getContext("2d");p.drawImage(h,0,0);const y=u.getFile(n);if(y!=null){const d="There is already an existing texture at "+n+" but while trying to extract a texture from a .bbmodel file a different texture exists at the same path.",f=await y.readAsImage(),e=document.createElement("canvas");e.width=f.width,e.height=f.height;const g=e.getContext("2d");if(g.drawImage(f,0,0),r.width!=e.width||r.height==e.height)throw document.body.appendChild(r),document.body.appendChild(e),new Error(d+` (Differing width/height, ${r.width}x${r.height} vs ${e.width}x${e.height})`);for(let l=0;l<e.width;l++)for(let m=0;m<e.width;m++){const w=p.getImageData(l,m,1,1),x=g.getImageData(l,m,1,1);if(w.data[0]!=x.data[0]||w.data[1]!=x.data[1]||w.data[2]!=x.data[2]||w.data[3]!=x.data[3])throw new Error(d+" (Differing pixel at ("+l+", "+m+").)")}}else{v.info("Extracting texture "+t);const d=await new Promise(function(f,e){r.toBlob(g=>g!=null?f(g):e(new Error("Failed to export image to blob.")),"image/png")});u.writeFile(n,d)}}}for(const i of o.elements){const a={from:i.from,to:i.to,faces:{}};for(const t in i.faces){const n=i.faces[t],c={uv:n.uv},h=o.textures[n.texture];c.texture="#"+(h==null?"missing":h.id),n.rotation&&(c.rotation=n.rotation),a.faces[t]=c}if(i.rotation)for(let t=0;t<i.rotation.length;t++){const n=i.rotation[t];if(n!=0){const c=["x","y","z"][t];a.rotation={angle:n,axis:c,origin:i.origin}}}s.elements.push(a)}return s}export{b as convertBbmodelToJson};
